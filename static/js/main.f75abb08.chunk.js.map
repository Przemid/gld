{"version":3,"sources":["sound/airhorn.mp3","img/setting-512.png","img/logo_kolor.jpg","actions/actionTypes.tsx","actions/settingsActions.tsx","containers/SettingsPage.tsx","containers/Clock.tsx","containers/HomePage.js","App.js","serviceWorker.js","reducers/settingsReducer.tsx","store.js","index.js"],"names":["module","exports","SETTINGS_USTAW_MINUTY","SETTINGS_USTAW_SEKUNDY","ustawMinuty","payload","type","actionTypes","SettingsPage","props","e","data","Number","value","ustawSekundy","state","this","minuty","roundOptions","key","text","secondsOptions","className","src","logo","alt","Dropdown","placeholder","fluid","selection","options","onChange","image","avatar","React","Component","container","compose","connect","_state","_props","sekundy","Clock","sidebarOpen","onSetSidebarOpen","bind","open","setState","Audio","Button","inverted","disabled","HomePage","audio","airhornFile","sidebar","onSetOpen","styles","background","settingsIcon","onClick","style","width","height","play","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","initialState","store","createStore","action","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"mFAAAA,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,uZCA9BC,EAAwB,wBAIxBC,EAAyB,yBCD/B,SAASC,EAAYC,GAC3B,MAAO,CACNC,KAAMC,EACNF,W,qBCwBWG,EAAb,YACE,WAAmBC,GAAe,IAAD,8BAC/B,4CAAMA,KAIDL,YAAc,SAACM,EAAQC,GAAe,IACnCP,EAAgB,EAAKK,MAArBL,YACJA,GACFA,EAAYQ,OAAOD,EAAKE,SARK,EAY1BC,aAAe,SAACJ,EAAQC,GAAe,IACpCG,EAAiB,EAAKL,MAAtBK,aACJA,GACFA,EAAaF,OAAOD,EAAKE,SAb3B,EAAKE,MAAQ,GAFkB,EADnC,sEAqBuBC,KAAKP,MAAhBQ,OADA,IAyCFC,EAAe,CACnB,CACEC,IAAK,IACLC,KAAM,IACNP,MAAO,KAET,CACEM,IAAK,IACLC,KAAM,IACNP,MAAO,KAET,CACEM,IAAK,IACLC,KAAM,IACNP,MAAO,KAET,CACEM,IAAK,IACLC,KAAM,IACNP,MAAO,KAET,CACEM,IAAK,IACLC,KAAM,IACNP,MAAO,MAILQ,EAAiB,CACrB,CACEF,IAAK,IACLC,KAAM,IACNP,MAAO,KAET,CACEM,IAAK,KACLC,KAAM,KACNP,MAAO,MAET,CACEM,IAAK,KACLC,KAAM,KACNP,MAAO,MAET,CACEM,IAAK,KACLC,KAAM,KACNP,MAAO,OAiBX,OACE,yBAAKS,UAAU,gBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKA,UAAU,eACb,yBAAKC,IAAKC,IAAMC,IAAI,WAGxB,kBAAC,IAAD,eACA,kBAAC,IAAD,KACE,kBAACC,EAAA,EAAD,CACEC,YAAY,mBACZC,OAAK,EACLC,WAAS,EACTC,QAASZ,KAGb,kBAAC,IAAD,gBACA,kBAAC,IAAD,KACE,kBAACQ,EAAA,EAAD,CACEC,YAAY,kCACZC,OAAK,EACLC,WAAS,EACTC,QAASZ,EACTa,SAAUf,KAAKZ,eAGnB,kBAAC,IAAD,iBACA,kBAAC,IAAD,KACE,kBAACsB,EAAA,EAAD,CACEC,YAAY,qBACZC,OAAK,EACLC,WAAS,EACTC,QAAST,EACTU,SAAUf,KAAKF,gBAGnB,kBAAC,IAAD,6BACA,kBAAC,IAAD,KACE,kBAACY,EAAA,EAAD,CACEC,YAAY,uBACZC,OAAK,EACLC,WAAS,EACTC,QAAST,KAIb,kBAAC,IAAD,kBACA,kBAAC,IAAD,KACE,kBAACK,EAAA,EAAD,CACEC,YAAY,mBACZC,OAAK,EACLC,WAAS,EACTC,QAAST,KAKb,kBAAC,IAAD,oCACA,kBAAC,IAAD,KACE,kBAACK,EAAA,EAAD,CACEC,YAAY,UACZC,OAAK,EACLC,WAAS,EACTC,QA7EU,CAClB,CACEX,IAAK,MACLC,KAAM,MACNP,MAAO,QAET,CACEM,IAAK,MACLC,KAAM,MACNP,MAAO,aAwEL,kBAAC,IAAD,mBACA,kBAAC,IAAD,KACE,kBAACa,EAAA,EAAD,CACEC,YAAY,kBACZC,OAAK,EACLC,WAAS,EACTC,QAjLY,CACpB,CACEX,IAAK,WACLC,KAAM,WACNP,MAAO,WACPmB,MAAO,CACLC,QAAQ,EACRV,IAAK,gEAGT,CACEJ,IAAK,OACLC,KAAM,OACNP,MAAO,OACPmB,MAAO,CACLC,QAAQ,EACRV,IAAK,iEAGT,CACEJ,IAAK,SACLC,KAAM,SACNP,MAAO,SACPmB,MAAO,CACLC,QAAQ,EACRV,IAAK,iEAGT,CACEJ,IAAK,WACLC,KAAM,WACNP,MAAO,WACPmB,MAAO,CACLC,QAAQ,EACRV,IAAK,8EAxDf,GAAkCW,IAAMC,WA+NzBC,EAfGC,YAChBC,aACE,SAACC,EAAuBC,GACtB,MAAO,CACLvB,OAAQsB,EAAOtB,OACfwB,QAASF,EAAOE,WAGpB,CACErC,cACAU,aD9OC,SAAsBT,GAC5B,MAAO,CACNC,KAAMC,EACNF,cCiOgBgC,CAahB7B,G,kBCjOWkC,EAAb,YACE,WAAYjC,GAAe,IAAD,8BACxB,4CAAMA,KACDM,MAAQ,CACX4B,aAAa,GAEf,EAAKC,iBAAmB,EAAKA,iBAAiBC,KAAtB,gBALA,EAD5B,8EASmBC,GACf9B,KAAK+B,SAAS,CAAEJ,YAAaG,MAVjC,+BAekB,IAAIE,MADP,4BAAX,IADO,EAIqBhC,KAAKP,MAAzBQ,EAJD,EAICA,OAAQwB,EAJT,EAISA,QAEhB,OACE,kBAAC,IAAD,KACE,yBAAKnB,UAAU,iCACZL,EADH,IACYwB,GAEZ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKnB,UAAU,uBACb,kBAAC2B,EAAA,EAAD,CAAQC,UAAQ,GAAhB,UAEF,kBAAC,IAAD,CAAK5B,UAAU,uBACb,kBAAC2B,EAAA,EAAD,CAAQE,UAAQ,EAACD,UAAQ,GAAzB,gBA7BZ,GAA2BhB,IAAMC,WAkDlBC,EAdGC,YAChBC,aACE,SAACC,EAAuBC,GACtB,MAAO,CACLvB,OAAQsB,EAAOtB,OACfwB,QAASF,EAAOE,WAGpB,CACErC,gBATYiC,CAYhBK,GCZaU,E,YAjDb,WAAY3C,GAAQ,IAAD,8BACjB,4CAAMA,KACDM,MAAQ,CACX4B,aAAa,GAEf,EAAKC,iBAAmB,EAAKA,iBAAiBC,KAAtB,gBALP,E,8EAQFC,GACf9B,KAAK+B,SAAS,CAAEJ,YAAaG,M,+BAGrB,IAAD,OACDO,EAAQ,IAAIL,MAAMM,KACxB,OACE,yBAAKhC,UAAU,YACb,kBAAC,IAAD,CACEiC,QAAS,kBAAC,EAAD,MACTT,KAAM9B,KAAKD,MAAM4B,YACjBa,UAAWxC,KAAK4B,iBAChBa,OAAQ,CAAEF,QAAS,CAAEG,WAAY,WAEjC,yBACEnC,IAAKoC,IACLlC,IAAI,eACJmC,QAAS,kBAAM,EAAKhB,kBAAiB,IACrCiB,MAAO,CAAEC,MAAO,OAAQC,OAAQ,UAGlC,4BAAQzC,UAAU,cAChB,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKA,UAAU,cACb,uBAAGA,UAAU,SAASsC,QAAS,kBAAMP,EAAMW,SAA3C,cACa,gD,GApCR9B,IAAMC,WCEd8B,G,wLARX,OACE,6BACE,kBAAC,EAAD,W,GAJU/B,IAAMC,YCQlB+B,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBlE,QACf4D,UAAUC,cAAcQ,YAI1BC,QAAQC,IACN,iHAKEZ,GAAUA,EAAOa,UACnBb,EAAOa,SAASR,KAMlBM,QAAQC,IAAI,sCAGRZ,GAAUA,EAAOc,WACnBd,EAAOc,UAAUT,WAO5BU,OAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,M,6kBCvF1D,IAAMC,EAA8B,CACzC1E,OAAQ,EACRwB,QAAS,GCRJ,IAAMmD,EAAQC,aDWN,WAGG,IAFhB9E,EAEe,uDAFQ4E,EACvBG,EACe,uCACf,OAAQA,EAAOxF,MAEb,KAAKC,EACH,OAAO,EAAP,GACKQ,EADL,CAEEE,OAAQ6E,EAAOzF,UAInB,KAAKE,EACH,OAAO,EAAP,GACKQ,EADL,CAEE0B,QAASqD,EAAOzF,UAGpB,QACE,OAAOU,MEvBbgF,IAASC,OACP,kBAAC,IAAD,CAAUJ,MAAOA,GACf,kBAAC,EAAD,OAEFK,SAASC,eAAe,SHOnB,SAAkBxB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIwB,IAAIC,OAAwBhC,OAAOC,SAASgC,MACpDC,SAAWlC,OAAOC,SAASiC,OAIvC,OAGFlC,OAAOmC,iBAAiB,QAAQ,WAC9B,IAAM9B,EAAK,UAAM2B,OAAN,sBAEPlC,IAgEV,SAAiCO,EAAOC,GAEtC8B,MAAM/B,GACHK,MAAK,SAAA2B,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAYI,QAAQ,cAG5CnC,UAAUC,cAAcmC,MAAMjC,MAAK,SAAAC,GACjCA,EAAaiC,aAAalC,MAAK,WAC7BV,OAAOC,SAAS4C,eAKpBzC,EAAgBC,EAAOC,MAG1Be,OAAM,WACLJ,QAAQC,IACN,oEArFA4B,CAAwBzC,EAAOC,GAI/BC,UAAUC,cAAcmC,MAAMjC,MAAK,WACjCO,QAAQC,IACN,iHAMJd,EAAgBC,EAAOC,OG7B/BE,K","file":"static/js/main.f75abb08.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/airhorn.95897491.mp3\";","module.exports = __webpack_public_path__ + \"static/media/setting-512.3f40f759.png\";","module.exports = __webpack_public_path__ + \"static/media/logo_kolor.cd85f5a0.jpg\";","export const SETTINGS_USTAW_MINUTY = 'SETTINGS_USTAW_MINUTY';\r\nexport const SETTINGS_GET_MINUTY = 'SETTINGS_GET_MINUTY';\r\nexport const SETTINGS_USTAW_MINUTY_FAIL = 'SETTINGS_USTAW_MINUTY_FAIL';\r\n\r\nexport const SETTINGS_USTAW_SEKUNDY = 'SETTINGS_USTAW_SEKUNDY';\r\n\r\n","import { Action } from '../models';\r\nimport * as actionTypes from './actionTypes';\r\n\r\nexport function ustawMinuty(payload: number): Action {\r\n\treturn {\r\n\t\ttype: actionTypes.SETTINGS_USTAW_MINUTY,\r\n\t\tpayload\r\n\t};\r\n}\r\n\r\nexport function ustawSekundy(payload: number): Action {\r\n\treturn {\r\n\t\ttype: actionTypes.SETTINGS_USTAW_SEKUNDY,\r\n\t\tpayload\r\n\t};\r\n}\r\n","import React from \"react\";\r\nimport logo from \"../img/logo_kolor.jpg\";\r\nimport \"../css/SettingsPage.css\";\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n// import ToggleButton from \"react-toggle-button\";\r\nimport { connect } from \"react-redux\";\r\nimport { ustawMinuty, ustawSekundy } from \"../actions/settingsActions\";\r\nimport { SettingsState } from \"../reducers/settingsReducer\";\r\nimport { compose } from \"recompose\";\r\nimport { Dropdown } from \"semantic-ui-react\";\r\n\r\ninterface ComponentProps {}\r\n\r\ninterface LocalProps {}\r\n\r\ninterface StateProps {\r\n  minuty: number;\r\n  sekundy: number;\r\n}\r\n\r\ninterface DispatchProps {\r\n  ustawMinuty: typeof ustawMinuty;\r\n  ustawSekundy: typeof ustawSekundy;\r\n}\r\n\r\ntype Props = ComponentProps & LocalProps & StateProps & DispatchProps;\r\n\r\nexport class SettingsPage extends React.Component<Props, LocalProps> {\r\n  public constructor(props: Props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  public ustawMinuty = (e: any, data: any) => {\r\n    const { ustawMinuty } = this.props;\r\n    if (ustawMinuty) {\r\n      ustawMinuty(Number(data.value));\r\n    }\r\n  };\r\n\r\n  public ustawSekundy = (e: any, data: any) => {\r\n    const { ustawSekundy } = this.props;\r\n    if (ustawSekundy) {\r\n      ustawSekundy(Number(data.value));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { minuty } = this.props;\r\n    const friendOptions = [\r\n      {\r\n        key: \"Marcin W\",\r\n        text: \"Marcin W\",\r\n        value: \"Marcin W\",\r\n        image: {\r\n          avatar: true,\r\n          src: \"https://react.semantic-ui.com/images/avatar/small/jenny.jpg\"\r\n        }\r\n      },\r\n      {\r\n        key: \"Arek\",\r\n        text: \"Arek\",\r\n        value: \"Arek\",\r\n        image: {\r\n          avatar: true,\r\n          src: \"https://react.semantic-ui.com/images/avatar/small/elliot.jpg\"\r\n        }\r\n      },\r\n      {\r\n        key: \"Bronek\",\r\n        text: \"Bronek\",\r\n        value: \"Bronek\",\r\n        image: {\r\n          avatar: true,\r\n          src: \"https://react.semantic-ui.com/images/avatar/small/stevie.jpg\"\r\n        }\r\n      },\r\n      {\r\n        key: \"Marcin J\",\r\n        text: \"Marcin J\",\r\n        value: \"Marcin J\",\r\n        image: {\r\n          avatar: true,\r\n          src: \"https://react.semantic-ui.com/images/avatar/small/christian.jpg\"\r\n        }\r\n      }\r\n    ];\r\n\r\n    const roundOptions = [\r\n      {\r\n        key: \"1\",\r\n        text: \"1\",\r\n        value: \"1\"\r\n      },\r\n      {\r\n        key: \"2\",\r\n        text: \"2\",\r\n        value: \"2\"\r\n      },\r\n      {\r\n        key: \"3\",\r\n        text: \"3\",\r\n        value: \"3\"\r\n      },\r\n      {\r\n        key: \"4\",\r\n        text: \"4\",\r\n        value: \"4\"\r\n      },\r\n      {\r\n        key: \"5\",\r\n        text: \"5\",\r\n        value: \"5\"\r\n      }\r\n    ];\r\n\r\n    const secondsOptions = [\r\n      {\r\n        key: \"0\",\r\n        text: \"0\",\r\n        value: \"0\"\r\n      },\r\n      {\r\n        key: \"15\",\r\n        text: \"15\",\r\n        value: \"15\"\r\n      },\r\n      {\r\n        key: \"30\",\r\n        text: \"30\",\r\n        value: \"30\"\r\n      },\r\n      {\r\n        key: \"45\",\r\n        text: \"45\",\r\n        value: \"45\"\r\n      }\r\n    ];\r\n\r\n    const boolOptions = [\r\n      {\r\n        key: \"tak\",\r\n        text: \"Tak\",\r\n        value: \"true\"\r\n      },\r\n      {\r\n        key: \"nie\",\r\n        text: \"Nie\",\r\n        value: \"false\"\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <div className=\"SettingsPage\">\r\n        <Container>\r\n          <Row>\r\n            <Col className=\"ColumnBlack\">\r\n              <img src={logo} alt=\"logo\" />\r\n            </Col>\r\n          </Row>\r\n          <Row>Rundy:</Row>\r\n          <Row>\r\n            <Dropdown\r\n              placeholder=\"Wybierz ile rund\"\r\n              fluid\r\n              selection\r\n              options={roundOptions}\r\n            />\r\n          </Row>\r\n          <Row>Minuty:</Row>\r\n          <Row>\r\n            <Dropdown\r\n              placeholder=\"Wybierz ile minut na rundę\"\r\n              fluid\r\n              selection\r\n              options={roundOptions}\r\n              onChange={this.ustawMinuty}\r\n            />\r\n          </Row>\r\n          <Row>Sekundy:</Row>\r\n          <Row>\r\n            <Dropdown\r\n              placeholder=\"Wybierz ile sekund\"\r\n              fluid\r\n              selection\r\n              options={secondsOptions}\r\n              onChange={this.ustawSekundy}\r\n            />\r\n          </Row>\r\n          <Row>Przerwa w sekundach:</Row>\r\n          <Row>\r\n            <Dropdown\r\n              placeholder=\"Wybierz przerwę\"\r\n              fluid\r\n              selection\r\n              options={secondsOptions}\r\n              // onChange={this.ustawMinuty}\r\n            />\r\n          </Row>\r\n          <Row>Cooldown:</Row>\r\n          <Row>\r\n            <Dropdown\r\n              placeholder=\"Wybierz cooldown\"\r\n              fluid\r\n              selection\r\n              options={secondsOptions}\r\n              // onChange={this.ustawMinuty}\r\n            />\r\n          </Row>\r\n\r\n          <Row>Sygnał co minutę:</Row>\r\n          <Row>\r\n            <Dropdown\r\n              placeholder=\"Wybierz\"\r\n              fluid\r\n              selection\r\n              options={boolOptions}\r\n              // onChange={this.ustawMinuty}\r\n            />\r\n          </Row>\r\n          <Row>SoundPack:</Row>\r\n          <Row>\r\n            <Dropdown\r\n              placeholder=\"Wybierz trenera\"\r\n              fluid\r\n              selection\r\n              options={friendOptions}\r\n            />\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst container = compose<Props, ComponentProps>(\r\n  connect<StateProps, DispatchProps, {}, SettingsState>(\r\n    (_state: SettingsState, _props: any) => {\r\n      return {\r\n        minuty: _state.minuty,\r\n        sekundy: _state.sekundy\r\n      };\r\n    },\r\n    {\r\n      ustawMinuty,\r\n      ustawSekundy\r\n    }\r\n  )\r\n)(SettingsPage);\r\n\r\nexport default container;\r\n","import React from \"react\";\r\nimport \"../css/Clock.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { ustawMinuty } from \"../actions/settingsActions\";\r\nimport { SettingsState } from \"../reducers/settingsReducer\";\r\nimport { compose } from \"recompose\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { Button, Segment } from \"semantic-ui-react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\ninterface ComponentProps {}\r\n\r\ninterface LocalProps {}\r\n\r\ninterface StateProps {\r\n  minuty: number;\r\n  sekundy: number;\r\n}\r\n\r\ninterface DispatchProps {\r\n  ustawMinuty: typeof ustawMinuty;\r\n}\r\n\r\ntype Props = ComponentProps & LocalProps & StateProps & DispatchProps;\r\n\r\nexport class Clock extends React.Component<Props, LocalProps> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      sidebarOpen: false\r\n    };\r\n    this.onSetSidebarOpen = this.onSetSidebarOpen.bind(this);\r\n  }\r\n\r\n  onSetSidebarOpen(open: boolean) {\r\n    this.setState({ sidebarOpen: open });\r\n  }\r\n\r\n  render() {\r\n    let path = \"../src/sound/airhorn.mp3\";\r\n    const audio = new Audio(path);\r\n    const seconds = \"00\";\r\n    const { minuty, sekundy } = this.props;\r\n\r\n    return (\r\n      <Container>\r\n        <div className=\"ClockNumbers ClockNumbersBlue\">\r\n          {minuty}:{sekundy}\r\n        </div>\r\n        <Row>\r\n          <Col className=\"ClockColumnCentered\">\r\n            <Button inverted>Start</Button>\r\n          </Col>\r\n          <Col className=\"ClockColumnCentered\">\r\n            <Button disabled inverted>Reset</Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nconst container = compose<Props, ComponentProps>(\r\n  connect<StateProps, DispatchProps, {}, SettingsState>(\r\n    (_state: SettingsState, _props: any) => {\r\n      return {\r\n        minuty: _state.minuty,\r\n        sekundy: _state.sekundy\r\n      };\r\n    },\r\n    {\r\n      ustawMinuty\r\n    }\r\n  )\r\n)(Clock);\r\n\r\nexport default container;\r\n","import React from \"react\";\r\nimport Sidebar from \"react-sidebar\";\r\nimport \"../css/HomePage.css\";\r\nimport ReactNoSleep from \"react-no-sleep\";\r\nimport airhornFile from \"../sound/airhorn.mp3\";\r\nimport settingsIcon from \"../img/setting-512.png\";\r\nimport SettingsPage from \"../containers/SettingsPage\";\r\nimport Clock from \"../containers/Clock\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nclass HomePage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      sidebarOpen: false\r\n    };\r\n    this.onSetSidebarOpen = this.onSetSidebarOpen.bind(this);\r\n  }\r\n\r\n  onSetSidebarOpen(open) {\r\n    this.setState({ sidebarOpen: open });\r\n  }\r\n\r\n  render() {\r\n    const audio = new Audio(airhornFile);\r\n    return (\r\n      <div className=\"HomePage\">\r\n        <Sidebar\r\n          sidebar={<SettingsPage></SettingsPage>}\r\n          open={this.state.sidebarOpen}\r\n          onSetOpen={this.onSetSidebarOpen}\r\n          styles={{ sidebar: { background: \"black\" } }}\r\n        >\r\n          <img\r\n            src={settingsIcon}\r\n            alt=\"SettingsIcon\"\r\n            onClick={() => this.onSetSidebarOpen(true)}\r\n            style={{ width: \"30px\", height: \"30px\" }}\r\n          />\r\n\r\n          <header className=\"App-header\">\r\n            <Container>\r\n              <Clock></Clock>\r\n              <Row>\r\n                <Col className=\"App-footer\">\r\n                  <p className=\"G-logo\" onClick={() => audio.play()}>\r\n                    Powered by <b>Goliat</b>\r\n                  </p>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n\r\n            {/* <ReactNoSleep>{({ isOn, enable, disable }) => enable()}</ReactNoSleep> */}\r\n          </header>\r\n        </Sidebar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\nimport HomePage from \"../src/containers/HomePage\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <HomePage></HomePage>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { Action } from \"../models\";\r\n\r\nimport * as actionTypes from \"../actions/actionTypes\";\r\n\r\nexport interface SettingsState {\r\n  minuty: number;\r\n  sekundy: number;\r\n}\r\n\r\nexport const initialState: SettingsState = {\r\n  minuty: 0,\r\n  sekundy: 0\r\n};\r\n\r\nexport default function reducer(\r\n  state: SettingsState = initialState,\r\n  action: Action\r\n): SettingsState {\r\n  switch (action.type) {\r\n    // SETTINGS_USTAW_MINUTY\r\n    case actionTypes.SETTINGS_USTAW_MINUTY:\r\n      return {\r\n        ...state,\r\n        minuty: action.payload\r\n      };\r\n\r\n// SETTINGS_USTAW_SEKUNDY\r\n    case actionTypes.SETTINGS_USTAW_SEKUNDY:\r\n      return {\r\n        ...state,\r\n        sekundy: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore } from \"redux\";\r\nimport settingsReducer from \"../src/reducers/settingsReducer\";\r\n\r\nexport const store = createStore(settingsReducer);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport {store} from \"../src/store\";\r\n\r\n//const store = createStore();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}