{"version":3,"sources":["sound/airhorn.mp3","img/setting-512.png","img/logo_kolor.jpg","actions/actionTypes.tsx","actions/settingsActions.tsx","containers/SettingsPage.tsx","containers/Clock.tsx","containers/Summary.tsx","containers/HomePage.js","App.js","serviceWorker.js","reducers/settingsReducer.tsx","store.js","index.js"],"names":["module","exports","SETTINGS_USTAW_MINUTY","SETTINGS_USTAW_SEKUNDY","SETTINGS_USTAW_RUNDY","SETTINGS_USTAW_PRZERWA","SETTINGS_USTAW_COLDOWN","SETTINGS_USTAW_SYGNALCOMINUTE","SETTINGS_USTAW_SOUNDPACK","SETTINGS_USTAW_CLOCKRED","SETTINGS_USTAW_CLOCKBLUE","SETTINGS_USTAW_CLOCKGREEN","SETTINGS_USTAW_ISCOUNTDOWN","SETTINGS_USTAW_ISCOOLDOWN","SETTINGS_USTAW_CZASDOSTARTU","SETTINGS_USTAW_ISSTARTING","SETTINGS_USTAW_ISPRZERWA","ustawisCountDown","payload","type","actionTypes","SettingsPage","props","ustawMinuty","e","data","value","ustawSekundy","Number","ustawRundy","ustawPrzerwa","ustawCooldown","ustawSygnalCoMinute","ustawSoundPack","ustawCzasDoStartu","state","roundOptions","key","text","secondsOptions","cooldownOptions","className","src","logo","alt","Dropdown","placeholder","fluid","selection","options","onChange","this","defaultValue","image","avatar","isOn","enable","disable","Button","onClick","inverted","React","Component","container","compose","connect","_state","_props","minuty","sekundy","Clock","formatTime","time","seconds","minutes","Math","floor","toString","length","startCountdown","stopCountdown","resetCountdown","czasDoStartu","tick","setState","startStarting","ustawisStarting","stopStarting","resetStarting","getColor","isCountdown","green","isStarting","parseInt","startButton","minutyL","sekundyL","timeIsGrabbed","rundyL","currentRound","czasDoStartuL","rundy","x","setTimeout","style","color","isCooldown","isPrzerwa","przerwa","cooldown","sygnalCoMinute","soundPack","ustawisCooldown","ustawisPrzerwa","Summary","HomePage","sidebarOpen","onSetSidebarOpen","bind","open","audio","Audio","airhornFile","sidebar","onSetOpen","styles","background","settingsIcon","width","height","play","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","initialState","clockColorRed","clockColorBlue","clockColorGreen","store","createStore","action","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"yGAAAA,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,yXCA9BC,EAAwB,wBACxBC,EAAyB,yBACzBC,EAAuB,uBACvBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAgC,gCAChCC,EAA2B,2BAC3BC,EAA0B,0BAC1BC,EAA2B,2BAC3BC,EAA4B,4BAC5BC,EAA6B,6BAC7BC,EAA4B,4BAC5BC,EAA8B,8BAC9BC,EAA4B,4BAC5BC,EAA2B,2BCkDjC,SAASC,EAAiBC,GAC/B,MAAO,CACLC,KAAMC,EACNF,W,uCCrBSG,EAAb,YACE,WAAmBC,GAAe,IAAD,8BAC/B,4CAAMA,KAIDC,YAAc,SAACC,EAAQC,GAAe,IACnCF,EAAgB,EAAKD,MAArBC,YACJA,GACFA,EAAYE,EAAKC,QARY,EAY1BC,aAAe,SAACH,EAAQC,GAAe,IACpCE,EAAiB,EAAKL,MAAtBK,aACJA,GACFA,EAAaC,OAAOH,EAAKC,SAfI,EAmB1BG,WAAa,SAACL,EAAQC,GAAe,IAClCI,EAAe,EAAKP,MAApBO,WACJA,GACFA,EAAWD,OAAOH,EAAKC,SAtBM,EA0B1BI,aAAe,SAACN,EAAQC,GAAe,IACpCK,EAAiB,EAAKR,MAAtBQ,aACJA,GACFA,EAAaF,OAAOH,EAAKC,SA7BI,EAiC1BK,cAAgB,SAACP,EAAQC,GAAe,IACrCM,EAAkB,EAAKT,MAAvBS,cACJA,GACFA,EAAcH,OAAOH,EAAKC,SApCG,EAwC1BM,oBAAsB,SAACR,EAAQC,GAAe,IAC3CO,EAAwB,EAAKV,MAA7BU,oBACJA,GACFA,EAAoBP,EAAKC,QA3CI,EA+C1BO,eAAiB,SAACT,EAAQC,GAAe,IACtCQ,EAAmB,EAAKX,MAAxBW,eACJA,GACFA,EAAeL,OAAOH,EAAKC,SAlDE,EAsD1BQ,kBAAoB,SAACV,EAAQC,GAAe,IACzCS,EAAsB,EAAKZ,MAA3BY,kBACJA,GACFA,EAAkBN,OAAOH,EAAKC,SAvDhC,EAAKS,MAAQ,GAFkB,EADnC,sEA+DI,IAqBMC,EAAe,CACnB,CACEC,IAAK,IACLC,KAAM,IACNZ,MAAO,GAET,CACEW,IAAK,IACLC,KAAM,IACNZ,MAAO,GAET,CACEW,IAAK,IACLC,KAAM,IACNZ,MAAO,GAET,CACEW,IAAK,IACLC,KAAM,IACNZ,MAAO,GAET,CACEW,IAAK,IACLC,KAAM,IACNZ,MAAO,GAET,CACEW,IAAK,IACLC,KAAM,IACNZ,MAAO,GAET,CACEW,IAAK,IACLC,KAAM,IACNZ,MAAO,GAET,CACEW,IAAK,IACLC,KAAM,IACNZ,MAAO,GAET,CACEW,IAAK,IACLC,KAAM,IACNZ,MAAO,GAET,CACEW,IAAK,KACLC,KAAM,KACNZ,MAAO,KAILa,EAAiB,CACrB,CACEF,IAAK,IACLC,KAAM,IACNZ,MAAO,GAET,CACEW,IAAK,IACLC,KAAM,IACNZ,MAAO,GAET,CACEW,IAAK,KACLC,KAAM,KACNZ,MAAO,IAET,CACEW,IAAK,KACLC,KAAM,KACNZ,MAAO,IAET,CACEW,IAAK,KACLC,KAAM,KACNZ,MAAO,IAET,CACEW,IAAK,KACLC,KAAM,KACNZ,MAAO,KAILc,EAAkB,CACtB,CACEH,IAAK,IACLC,KAAM,IACNZ,MAAO,GAET,CACEW,IAAK,KACLC,KAAM,KACNZ,MAAO,IAET,CACEW,IAAK,KACLC,KAAM,KACNZ,MAAO,IAET,CACEW,IAAK,KACLC,KAAM,KACNZ,MAAO,IAET,CACEW,IAAK,KACLC,KAAM,KACNZ,MAAO,KAiBX,OACE,yBAAKe,UAAU,gBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKA,UAAU,eACb,yBAAKC,IAAKC,IAAMC,IAAI,WAGxB,kBAAC,IAAD,eACA,kBAAC,IAAD,KACE,kBAACC,EAAA,EAAD,CACEC,YAAY,mBACZC,OAAK,EACLC,WAAS,EACTC,QAASb,EACTc,SAAUC,KAAKtB,WACfuB,aAAc,KAGlB,kBAAC,IAAD,gBACA,kBAAC,IAAD,KACE,kBAACP,EAAA,EAAD,CACEC,YAAY,kCACZC,OAAK,EACLC,WAAS,EACTC,QAASb,EACTc,SAAUC,KAAK5B,YACf6B,aAAc,KAGlB,kBAAC,IAAD,iBACA,kBAAC,IAAD,KACE,kBAACP,EAAA,EAAD,CACEC,YAAY,qBACZC,OAAK,EACLC,WAAS,EACTC,QAASV,EACTW,SAAUC,KAAKxB,aACfyB,aAAc,KAGlB,kBAAC,IAAD,6BACA,kBAAC,IAAD,KACE,kBAACP,EAAA,EAAD,CACEC,YAAY,uBACZC,OAAK,EACLC,WAAS,EACTC,QAAST,EACTU,SAAUC,KAAKrB,aACfsB,aAAc,MAGlB,kBAAC,IAAD,wBACA,kBAAC,IAAD,KACE,kBAACP,EAAA,EAAD,CACEC,YAAY,6BACZC,OAAK,EACLC,WAAS,EACTC,QAASV,EACTW,SAAUC,KAAKjB,kBACfkB,aAAc,MAGlB,kBAAC,IAAD,kBACA,kBAAC,IAAD,KACE,kBAACP,EAAA,EAAD,CACEC,YAAY,mBACZC,OAAK,EACLC,WAAS,EACTC,QAAST,EACTU,SAAUC,KAAKpB,cACfqB,aAAc,MAIlB,kBAAC,IAAD,oCACA,kBAAC,IAAD,KACE,kBAACP,EAAA,EAAD,CACEC,YAAY,UACZC,OAAK,EACLC,WAAS,EACTC,QA9FU,CAClB,CACEZ,IAAK,MACLC,KAAM,MACNZ,MAAO,QAET,CACEW,IAAK,MACLC,KAAM,MACNZ,MAAO,UAsFDwB,SAAUC,KAAKnB,oBACfoB,aAAc,UAGlB,kBAAC,IAAD,mBACA,kBAAC,IAAD,KACE,kBAACP,EAAA,EAAD,CACEC,YAAY,kBACZC,OAAK,EACLC,WAAS,EACTC,QAhPY,CACpB,CACEZ,IAAK,OACLC,KAAM,OACNZ,MAAO,EACP2B,MAAO,CACLC,QAAQ,EACRZ,IAAK,iEAGT,CACEL,IAAK,OACLC,KAAM,OACNZ,MAAO,EACP2B,MAAO,CACLC,QAAQ,EACRZ,IAAK,kEAiODQ,SAAUC,KAAKlB,eACfmB,aAAc,KAGlB,kBAAC,IAAD,KACE,kBAAC,IAAD,MACG,gBAAGG,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAQC,EAAjB,EAAiBA,QAAjB,OACC,kBAACC,EAAA,EAAD,CAAQC,QAASJ,EAAOE,EAAUD,EAAQI,UAAQ,GAC/CL,EAAO,KAAO,iBAxTjC,GAAkCM,IAAMC,WAwVzBC,EArBGC,YAChBC,aACE,SAACC,EAAuBC,GACtB,MAAO,CACLC,OAAQF,EAAOE,OACfC,QAASH,EAAOG,WAGpB,CACE9C,YDvXC,SAAqBL,GAC1B,MAAO,CACLC,KAAMC,EACNF,YCqXES,aDjXC,SAAsBT,GAC3B,MAAO,CACLC,KAAMC,EACNF,YC+WEW,WD5WC,SAAoBX,GACzB,MAAO,CACLC,KAAMC,EACNF,YC0WEY,aDvWC,SAAsBZ,GAC3B,MAAO,CACLC,KAAMC,EACNF,YCqWEa,cDlWC,SAAuBb,GAC5B,MAAO,CACLC,KAAMC,EACNF,YCgWEc,oBD7VC,SAA6Bd,GAClC,MAAO,CACLC,KAAMC,EACNF,YC2VEe,eDxVC,SAAwBf,GAC7B,MAAO,CACLC,KAAMC,EACNF,YCsVEgB,kBDpTC,SAA2BhB,GAChC,MAAO,CACLC,KAAMC,EACNF,cCiSc8C,CAmBhB3C,GChVWiD,G,OAAb,YACE,WAAYhD,GAAe,IAAD,8BACxB,4CAAMA,KAwFDiD,WAAa,SAACC,GACnB,IAAIC,EAAUD,EAAO,GACjBE,EAAUC,KAAKC,MAAMJ,EAAO,IAKhC,OAHgC,IAA9BE,EAAQG,WAAWC,OAAe,IAAMJ,EAAUA,GAG7B,KADS,IAA9BD,EAAQI,WAAWC,OAAe,IAAML,EAAUA,IA/F5B,EAmGnBM,eAAiB,WAAO,IAAD,EACkB,EAAKzD,MAA3CL,EADoB,EACpBA,iBADoB,EACFmD,OADE,EACMC,QAK9BpD,GACFA,GAAiB,IA1GK,EA8GnB+D,cAAgB,WAAO,IACpB/D,EAAqB,EAAKK,MAA1BL,iBACJA,GACFA,GAAiB,IAjHK,EAqHnBgE,eAAiB,WAAO,IAAD,EACc,EAAK3D,MAAtB4D,GADG,EACpBd,OADoB,EACZC,QADY,EACHa,cACR,EAAK/C,MAAdgD,KACR,EAAKC,SAAS,CACZD,KAAMD,KAzHgB,EA6HnBG,cAAgB,WAAO,IAAD,EACe,EAAK/D,MAAvCgE,EADmB,EACnBA,gBADmB,EACFJ,aAGb,GAFK,EAAK/C,MAAdgD,MAGN,EAAKI,eAGHD,GACFA,GAAgB,IAtIM,EA0InBC,aAAe,WAAO,IACnBD,EAAoB,EAAKhE,MAAzBgE,gBACJA,GACFA,GAAgB,IA7IM,EAiJnBE,cAAgB,WAAO,IACpBN,EAAiB,EAAK5D,MAAtB4D,aACR,EAAKE,SAAS,CACZD,KAAMD,KApJgB,EAwJnBO,SAAW,WAAO,IAAD,EAC+B,EAAKnE,MAAlD8C,EADc,EACdA,OAAQC,EADM,EACNA,QAASqB,EADH,EACGA,YAInBC,GALgB,EACgBC,WAIxB,KAHG,EAAKzD,MAAdgD,MACc,GAATf,EAAcC,KAK3B,OAAIqB,EAEA,OACAG,UALQ,IAAMF,GAKDd,WAAY,IACzB,IACAgB,SAASF,EAAMd,WAAY,IAC3B,OAIK,kBA1Ke,EA+KnBiB,YAAc,WAAO,IAAD,EAC4B,EAAKxE,MAAlDgE,EADiB,EACjBA,gBAAiBI,EADA,EACAA,YAAaE,EADb,EACaA,WACrB,EAAKzD,MAAdgD,KAIHS,GACCN,GACFA,GAAgB,GAShBI,GACEzE,GACFA,GAAiB,IAhMrB,EAAKkB,MAAQ,CACX4D,QAAS,EACTC,SAAU,GACVC,eAAe,EACfd,KAAM,EACNe,OAAQ,EACRC,aAAc,EACdC,cAAe,IATO,EAD5B,iFAcuB,IAAD,EAC4CjD,KAAK7B,MAA3D8C,EADU,EACVA,OAAQC,EADE,EACFA,QAASqB,EADP,EACOA,YAAaW,EADpB,EACoBA,MAAOnB,EAD3B,EAC2BA,aAD3B,EAE2B/B,KAAKhB,MAA1C4D,EAFU,EAEVA,QAASC,EAFC,EAEDA,SAAUI,EAFT,EAESA,cACtBV,GAEDK,GAAW3B,GACX4B,GAAY3B,GACZ+B,GAAiBlB,GAEjB/B,KAAKiC,SAAS,CACZW,QAAS3B,EACT4B,SAAU3B,EACVc,KAAMD,EACNgB,OAAQG,EACRD,cAAelB,MA5BzB,2CAkCwB,IAAD,EAOf/B,KAAK7B,MALP8C,EAFiB,EAEjBA,OACAC,EAHiB,EAGjBA,QACAqB,EAJiB,EAIjBA,YACAE,EALiB,EAKjBA,WACAV,EANiB,EAMjBA,aANiB,EAQgC/B,KAAKhB,MAAhD4D,EARW,EAQXA,QAASC,EARE,EAQFA,SAAUb,EARR,EAQQA,KAAMiB,EARd,EAQcA,cAE7BE,EAAInD,KAEHuC,GAAgBE,EAaVA,IAAeF,GACZ,GAARP,IACFhC,KAAKoC,eACLpC,KAAK4B,iBACL5B,KAAKiC,SAAS,CACZD,KAAe,GAATf,EAAcC,KAGxBkC,YAAW,WACLpB,EAAO,GACTmB,EAAElB,SAAS,CACTD,KAAMA,EAAO,MAGhB,MACMO,IAAgBE,GAMzBW,YAAW,WACLpB,EAAO,GACTmB,EAAElB,SAAS,CACTD,KAAMA,EAAO,MAGhB,KAtCDY,GAAW3B,GACX4B,GAAY3B,GACZ+B,GAAiBlB,GAEjB/B,KAAKiC,SAAS,CACZW,QAAS3B,EACT4B,SAAU3B,EACVc,KAAMD,EACNkB,cAAelB,MAxDzB,+BAwMY,IAAD,EACwB/B,KAAK7B,MAA5BoE,EADD,EACCA,YAAaW,EADd,EACcA,MADd,EAEgClD,KAAKhB,MAApCgD,EAFD,EAECA,KAAcgB,GAFf,EAEOD,OAFP,EAEeC,cAClBK,EAAQ,CACVC,MAAOtD,KAAKsC,YAGd,OACE,kBAAC,IAAD,KACE,yBAAKhD,UAAU,eAAe+D,MAAOA,GAClCrD,KAAKoB,WAAWY,IAEnB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK1C,UAAU,uBACb,kBAACiB,EAAA,EAAD,CAAQC,QAASR,KAAK2C,YAAalC,UAAQ,GACxC8B,EAAc,OAAS,UAG5B,kBAAC,IAAD,CAAKjD,UAAU,kCAAkC+D,MAAOA,GAAxD,SACSL,EADT,IACwBE,GAExB,kBAAC,IAAD,CAAK5D,UAAU,uBACb,kBAACiB,EAAA,EAAD,CACEC,QAASR,KAAK8B,eAEdrB,UAAQ,GAHV,gBA9NZ,GAA2BC,IAAMC,YAsQlBC,EA3BGC,YAChBC,aACE,SAACC,EAAuBC,GACtB,MAAO,CACLC,OAAQF,EAAOE,OACfC,QAASH,EAAOG,QAChBqC,WAAYxC,EAAOwC,WACnBhB,YAAaxB,EAAOwB,YACpBE,WAAY1B,EAAO0B,WACnBe,UAAWzC,EAAOyC,UAClBN,MAAOnC,EAAOmC,MACdO,QAAS1C,EAAO0C,QAChBC,SAAU3C,EAAO2C,SACjBC,eAAgB5C,EAAO4C,eACvBC,UAAW7C,EAAO6C,UAClB7B,aAAchB,EAAOgB,gBAGzB,CACEjE,mBACAqE,gBF/NC,SAAyBpE,GAC9B,MAAO,CACLC,KAAMC,EACNF,YE6NE8F,gBF9OC,SAAyB9F,GAC9B,MAAO,CACLC,KAAMC,EACNF,YE4OE+F,eF1NC,SAAwB/F,GAC7B,MAAO,CACLC,KAAMC,EACNF,cEiMc8C,CAyBhBM,GC7RW4C,EAAb,iLACY,IAAD,EASH/D,KAAK7B,MAPP8C,EAFK,EAELA,OACAC,EAHK,EAGLA,QACAgC,EAJK,EAILA,MACAO,EALK,EAKLA,QACAC,EANK,EAMLA,SACAC,EAPK,EAOLA,eACA5B,EARK,EAQLA,aAGF,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKzC,UAAU,uBACb,oCACS4D,EADT,WACwBjC,EADxB,IACiCC,EAAU,GAAV,WAAmBA,GAAYA,EADhE,eACqFuC,EADrF,iBAEaC,EAFb,MAKF,kBAAC,IAAD,KACE,0DACqBC,EAAiB,MAAQ,MAD9C,sBAEW5B,EAFX,YAtBZ,GAA6BrB,IAAMC,WAiDpBC,EAjBGC,YAChBC,aACE,SAACC,EAAuBC,GACtB,MAAO,CACLC,OAAQF,EAAOE,OACfC,QAASH,EAAOG,QAChBgC,MAAOnC,EAAOmC,MACdO,QAAS1C,EAAO0C,QAChBC,SAAU3C,EAAO2C,SACjBC,eAAgB5C,EAAO4C,eACvB5B,aAAchB,EAAOgB,gBAGzB,IAbclB,CAehBkD,GCRaC,E,YArDb,WAAY7F,GAAQ,IAAD,8BACjB,4CAAMA,KACDa,MAAQ,CACXiF,aAAa,GAEf,EAAKC,iBAAmB,EAAKA,iBAAiBC,KAAtB,gBALP,E,8EAQFC,GACfpE,KAAKiC,SAAS,CAAEgC,YAAaG,M,+BAGrB,IAAD,OACDC,EAAQ,IAAIC,MAAMC,KACxB,OACE,yBAAKjF,UAAU,YACb,kBAAC,IAAD,CACEkF,QAAS,kBAAC,EAAD,MACTJ,KAAMpE,KAAKhB,MAAMiF,YACjBQ,UAAWzE,KAAKkE,iBAChBQ,OAAQ,CAAEF,QAAS,CAAEG,WAAY,WAEjC,yBACEpF,IAAKqF,IACLnF,IAAI,eACJe,QAAS,kBAAM,EAAK0D,kBAAiB,IACrCb,MAAO,CAAEwB,MAAO,OAAQC,OAAQ,UAGlC,4BAAQxF,UAAU,cAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEF,kBAAC,IAAD,KACE,kBAAC,EAAD,OAGF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKA,UAAU,cACb,uBAAGA,UAAU,SAASkB,QAAS,kBAAM6D,EAAMU,SAA3C,cACa,gD,GA1CRrE,IAAMC,WCEdqE,I,wLARX,OACE,6BACE,kBAAC,EAAD,W,GAJUtE,IAAMC,YCQlBsE,GAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBhH,QACf0G,UAAUC,cAAcQ,YAI1BC,QAAQC,IACN,iHAKEZ,GAAUA,EAAOa,UACnBb,EAAOa,SAASR,KAMlBM,QAAQC,IAAI,sCAGRZ,GAAUA,EAAOc,WACnBd,EAAOc,UAAUT,WAO5BU,OAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,M,olBC1E1D,IAAMC,GAA8B,CACzCzF,OAAQ,EACRC,QAAS,EACTgC,MAAO,EACPO,QAAS,GACTC,SAAU,GACVC,gBAAgB,EAChBC,UAAW,EACX+C,cAAe,IACfC,eAAgB,IAChBC,gBAAiB,IACjBtE,aAAa,EACbgB,YAAY,EACZd,YAAY,EACZe,WAAW,EACXzB,aAAc,IClCT,IAAM+E,GAAQC,cDqCN,WAGG,IAFhB/H,EAEe,uDAFQ0H,GACvBM,EACe,uCACf,OAAQA,EAAOhJ,MACb,KAAKC,EACH,OAAO,GAAP,GACKe,EADL,CAEEkE,MAAO8D,EAAOjJ,UAElB,KAAKE,EACH,OAAO,GAAP,GACKe,EADL,CAEEiC,OAAQ+F,EAAOjJ,UAEnB,KAAKE,EACH,OAAO,GAAP,GACKe,EADL,CAEEkC,QAAS8F,EAAOjJ,UAGpB,KAAKE,EACH,OAAO,GAAP,GACKe,EADL,CAEEyE,QAASuD,EAAOjJ,UAGpB,KAAKE,EACH,OAAO,GAAP,GACKe,EADL,CAEE0E,SAAUsD,EAAOjJ,UAGrB,KAAKE,EACH,OAAO,GAAP,GACKe,EADL,CAEE2E,eAAgBqD,EAAOjJ,UAG3B,KAAKE,EACH,OAAO,GAAP,GACKe,EADL,CAEE4E,UAAWoD,EAAOjJ,UAGtB,KAAKE,EACH,OAAO,GAAP,GACKe,EADL,CAEE2H,cAAeK,EAAOjJ,UAG1B,KAAKE,EACH,OAAO,GAAP,GACKe,EADL,CAEE6H,gBAAiBG,EAAOjJ,UAG5B,KAAKE,EACH,OAAO,GAAP,GACKe,EADL,CAEE4H,eAAgBI,EAAOjJ,UAG3B,KAAKE,EACH,OAAO,GAAP,GACKe,EADL,CAEEuD,YAAayE,EAAOjJ,UAGxB,KAAKE,EACH,OAAO,GAAP,GACKe,EADL,CAEEuE,WAAYyD,EAAOjJ,UAGvB,KAAKE,EACH,OAAO,GAAP,GACKe,EADL,CAEEyD,WAAYuE,EAAOjJ,UAGvB,KAAKE,EACH,OAAO,GAAP,GACKe,EADL,CAEEwE,UAAWwD,EAAOjJ,UAGtB,KAAKE,EACH,OAAO,GAAP,GACKe,EADL,CAEE+C,aAAciF,EAAOjJ,UAGzB,QACE,OAAOiB,ME7HbiI,IAASC,OACP,kBAAC,IAAD,CAAUJ,MAAOA,IACf,kBAAC,GAAD,OAEFK,SAASC,eAAe,SHSnB,SAAkB3B,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAI2B,IAAIC,OAAwBnC,OAAOC,SAASmC,MACpDC,SAAWrC,OAAOC,SAASoC,OAIvC,OAGFrC,OAAOsC,iBAAiB,QAAQ,WAC9B,IAAMjC,EAAK,UAAM8B,OAAN,sBAEPrC,KAgEV,SAAiCO,EAAOC,GAEtCiC,MAAMlC,GACHK,MAAK,SAAA8B,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAYI,QAAQ,cAG5CtC,UAAUC,cAAcsC,MAAMpC,MAAK,SAAAC,GACjCA,EAAaoC,aAAarC,MAAK,WAC7BV,OAAOC,SAAS+C,eAKpB5C,GAAgBC,EAAOC,MAG1Be,OAAM,WACLJ,QAAQC,IACN,oEArFA+B,CAAwB5C,EAAOC,GAI/BC,UAAUC,cAAcsC,MAAMpC,MAAK,WACjCO,QAAQC,IACN,iHAMJd,GAAgBC,EAAOC,OG/B/BE,K","file":"static/js/main.9519e146.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/airhorn.95897491.mp3\";","module.exports = __webpack_public_path__ + \"static/media/setting-512.3f40f759.png\";","module.exports = __webpack_public_path__ + \"static/media/logo_kolor.1bf82ca4.jpg\";","export const SETTINGS_USTAW_MINUTY = \"SETTINGS_USTAW_MINUTY\";\r\nexport const SETTINGS_USTAW_SEKUNDY = \"SETTINGS_USTAW_SEKUNDY\";\r\nexport const SETTINGS_USTAW_RUNDY = \"SETTINGS_USTAW_RUNDY\";\r\nexport const SETTINGS_USTAW_PRZERWA = \"SETTINGS_USTAW_PRZERWA\";\r\nexport const SETTINGS_USTAW_COLDOWN = \"SETTINGS_USTAW_COLDOWN\";\r\nexport const SETTINGS_USTAW_SYGNALCOMINUTE = \"SETTINGS_USTAW_SYGNALCOMINUTE\";\r\nexport const SETTINGS_USTAW_SOUNDPACK = \"SETTINGS_USTAW_SOUNDPACK\";\r\nexport const SETTINGS_USTAW_CLOCKRED = \"SETTINGS_USTAW_CLOCKRED\";\r\nexport const SETTINGS_USTAW_CLOCKBLUE = \"SETTINGS_USTAW_CLOCKBLUE\";\r\nexport const SETTINGS_USTAW_CLOCKGREEN = \"SETTINGS_USTAW_CLOCKGREEN\";\r\nexport const SETTINGS_USTAW_ISCOUNTDOWN = \"SETTINGS_USTAW_ISCOUNTDOWN\";\r\nexport const SETTINGS_USTAW_ISCOOLDOWN = \"SETTINGS_USTAW_ISCOOLDOWN\";\r\nexport const SETTINGS_USTAW_CZASDOSTARTU = \"SETTINGS_USTAW_CZASDOSTARTU\";\r\nexport const SETTINGS_USTAW_ISSTARTING = \"SETTINGS_USTAW_ISSTARTING\";\r\nexport const SETTINGS_USTAW_ISPRZERWA = \"SETTINGS_USTAW_ISPRZERWA\";\r\n\r\n","import { Action } from \"../models\";\r\nimport * as actionTypes from \"./actionTypes\";\r\n\r\nexport function ustawMinuty(payload: number): Action {\r\n  return {\r\n    type: actionTypes.SETTINGS_USTAW_MINUTY,\r\n    payload\r\n  };\r\n}\r\n\r\nexport function ustawSekundy(payload: number): Action {\r\n  return {\r\n    type: actionTypes.SETTINGS_USTAW_SEKUNDY,\r\n    payload\r\n  };\r\n}\r\nexport function ustawRundy(payload: number): Action {\r\n  return {\r\n    type: actionTypes.SETTINGS_USTAW_RUNDY,\r\n    payload\r\n  };\r\n}\r\nexport function ustawPrzerwa(payload: number): Action {\r\n  return {\r\n    type: actionTypes.SETTINGS_USTAW_PRZERWA,\r\n    payload\r\n  };\r\n}\r\nexport function ustawCooldown(payload: number): Action {\r\n  return {\r\n    type: actionTypes.SETTINGS_USTAW_COLDOWN,\r\n    payload\r\n  };\r\n}\r\nexport function ustawSygnalCoMinute(payload: boolean): Action {\r\n  return {\r\n    type: actionTypes.SETTINGS_USTAW_SYGNALCOMINUTE,\r\n    payload\r\n  };\r\n}\r\nexport function ustawSoundPack(payload: number): Action {\r\n  return {\r\n    type: actionTypes.SETTINGS_USTAW_SOUNDPACK,\r\n    payload\r\n  };\r\n}\r\nexport function ustawClockRed(payload: number): Action {\r\n  return {\r\n    type: actionTypes.SETTINGS_USTAW_CLOCKRED,\r\n    payload\r\n  };\r\n}\r\nexport function ustawClockBlue(payload: number): Action {\r\n  return {\r\n    type: actionTypes.SETTINGS_USTAW_CLOCKBLUE,\r\n    payload\r\n  };\r\n}\r\nexport function ustawClockGreen(payload: number): Action {\r\n  return {\r\n    type: actionTypes.SETTINGS_USTAW_CLOCKGREEN,\r\n    payload\r\n  };\r\n}\r\nexport function ustawisCountDown(payload: boolean): Action {\r\n  return {\r\n    type: actionTypes.SETTINGS_USTAW_ISCOUNTDOWN,\r\n    payload\r\n  };\r\n}\r\nexport function ustawisCooldown(payload: boolean): Action {\r\n  return {\r\n    type: actionTypes.SETTINGS_USTAW_ISCOOLDOWN,\r\n    payload\r\n  };\r\n}\r\n\r\nexport function ustawCzasDoStartu(payload: number): Action {\r\n  return {\r\n    type: actionTypes.SETTINGS_USTAW_CZASDOSTARTU,\r\n    payload\r\n  };\r\n}\r\n\r\nexport function ustawisStarting(payload: boolean): Action {\r\n  return {\r\n    type: actionTypes.SETTINGS_USTAW_ISSTARTING,\r\n    payload\r\n  };\r\n}\r\n\r\nexport function ustawisPrzerwa(payload: boolean): Action {\r\n  return {\r\n    type: actionTypes.SETTINGS_USTAW_ISPRZERWA,\r\n    payload\r\n  };\r\n}","import React from \"react\";\r\nimport logo from \"../img/logo_kolor.jpg\";\r\nimport \"../css/SettingsPage.css\";\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  ustawMinuty,\r\n  ustawSekundy,\r\n  ustawRundy,\r\n  ustawPrzerwa,\r\n  ustawCooldown,\r\n  ustawSygnalCoMinute,\r\n  ustawSoundPack,\r\n  ustawCzasDoStartu\r\n} from \"../actions/settingsActions\";\r\nimport { SettingsState } from \"../reducers/settingsReducer\";\r\nimport { compose } from \"recompose\";\r\nimport { Dropdown } from \"semantic-ui-react\";\r\nimport ReactNoSleep from \"react-no-sleep\";\r\nimport { Button, Segment } from \"semantic-ui-react\";\r\n\r\ninterface ComponentProps {}\r\n\r\ninterface LocalProps {}\r\n\r\ninterface StateProps {\r\n  minuty: number;\r\n  sekundy: number;\r\n}\r\n\r\ninterface DispatchProps {\r\n  ustawMinuty: typeof ustawMinuty;\r\n  ustawSekundy: typeof ustawSekundy;\r\n  ustawRundy: typeof ustawRundy;\r\n  ustawPrzerwa: typeof ustawPrzerwa;\r\n  ustawCooldown: typeof ustawCooldown;\r\n  ustawSygnalCoMinute: typeof ustawSygnalCoMinute;\r\n  ustawSoundPack: typeof ustawSoundPack;\r\n  ustawCzasDoStartu: typeof ustawCzasDoStartu;\r\n}\r\n\r\ntype Props = ComponentProps & LocalProps & StateProps & DispatchProps;\r\n\r\nexport class SettingsPage extends React.Component<Props, LocalProps> {\r\n  public constructor(props: Props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  public ustawMinuty = (e: any, data: any) => {\r\n    const { ustawMinuty } = this.props;\r\n    if (ustawMinuty) {\r\n      ustawMinuty(data.value);\r\n    }\r\n  };\r\n\r\n  public ustawSekundy = (e: any, data: any) => {\r\n    const { ustawSekundy } = this.props;\r\n    if (ustawSekundy) {\r\n      ustawSekundy(Number(data.value));\r\n    }\r\n  };\r\n\r\n  public ustawRundy = (e: any, data: any) => {\r\n    const { ustawRundy } = this.props;\r\n    if (ustawRundy) {\r\n      ustawRundy(Number(data.value));\r\n    }\r\n  };\r\n\r\n  public ustawPrzerwa = (e: any, data: any) => {\r\n    const { ustawPrzerwa } = this.props;\r\n    if (ustawPrzerwa) {\r\n      ustawPrzerwa(Number(data.value));\r\n    }\r\n  };\r\n\r\n  public ustawCooldown = (e: any, data: any) => {\r\n    const { ustawCooldown } = this.props;\r\n    if (ustawCooldown) {\r\n      ustawCooldown(Number(data.value));\r\n    }\r\n  };\r\n\r\n  public ustawSygnalCoMinute = (e: any, data: any) => {\r\n    const { ustawSygnalCoMinute } = this.props;\r\n    if (ustawSygnalCoMinute) {\r\n      ustawSygnalCoMinute(data.value);\r\n    }\r\n  };\r\n\r\n  public ustawSoundPack = (e: any, data: any) => {\r\n    const { ustawSoundPack } = this.props;\r\n    if (ustawSoundPack) {\r\n      ustawSoundPack(Number(data.value));\r\n    }\r\n  };\r\n\r\n  public ustawCzasDoStartu = (e: any, data: any) => {\r\n    const { ustawCzasDoStartu } = this.props;\r\n    if (ustawCzasDoStartu) {\r\n      ustawCzasDoStartu(Number(data.value));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const friendOptions = [\r\n      {\r\n        key: \"Horn\",\r\n        text: \"Horn\",\r\n        value: 1,\r\n        image: {\r\n          avatar: true,\r\n          src: \"https://react.semantic-ui.com/images/avatar/small/elliot.jpg\"\r\n        }\r\n      },\r\n      {\r\n        key: \"Arek\",\r\n        text: \"Arek\",\r\n        value: 2,\r\n        image: {\r\n          avatar: true,\r\n          src: \"https://react.semantic-ui.com/images/avatar/small/elliot.jpg\"\r\n        }\r\n      }\r\n    ];\r\n\r\n    const roundOptions = [\r\n      {\r\n        key: \"1\",\r\n        text: \"1\",\r\n        value: 1\r\n      },\r\n      {\r\n        key: \"2\",\r\n        text: \"2\",\r\n        value: 2\r\n      },\r\n      {\r\n        key: \"3\",\r\n        text: \"3\",\r\n        value: 3\r\n      },\r\n      {\r\n        key: \"4\",\r\n        text: \"4\",\r\n        value: 4\r\n      },\r\n      {\r\n        key: \"5\",\r\n        text: \"5\",\r\n        value: 5\r\n      },\r\n      {\r\n        key: \"6\",\r\n        text: \"6\",\r\n        value: 6\r\n      },\r\n      {\r\n        key: \"7\",\r\n        text: \"7\",\r\n        value: 7\r\n      },\r\n      {\r\n        key: \"8\",\r\n        text: \"8\",\r\n        value: 8\r\n      },\r\n      {\r\n        key: \"9\",\r\n        text: \"9\",\r\n        value: 9\r\n      },\r\n      {\r\n        key: \"10\",\r\n        text: \"10\",\r\n        value: 10\r\n      }\r\n    ];\r\n\r\n    const secondsOptions = [\r\n      {\r\n        key: \"0\",\r\n        text: \"0\",\r\n        value: 0\r\n      },\r\n      {\r\n        key: \"5\",\r\n        text: \"5\",\r\n        value: 5\r\n      },\r\n      {\r\n        key: \"10\",\r\n        text: \"10\",\r\n        value: 10\r\n      },\r\n      {\r\n        key: \"15\",\r\n        text: \"15\",\r\n        value: 15\r\n      },\r\n      {\r\n        key: \"30\",\r\n        text: \"30\",\r\n        value: 30\r\n      },\r\n      {\r\n        key: \"45\",\r\n        text: \"45\",\r\n        value: 45\r\n      }\r\n    ];\r\n\r\n    const cooldownOptions = [\r\n      {\r\n        key: \"0\",\r\n        text: \"0\",\r\n        value: 0\r\n      },\r\n      {\r\n        key: \"15\",\r\n        text: \"15\",\r\n        value: 15\r\n      },\r\n      {\r\n        key: \"30\",\r\n        text: \"30\",\r\n        value: 30\r\n      },\r\n      {\r\n        key: \"45\",\r\n        text: \"45\",\r\n        value: 45\r\n      },\r\n      {\r\n        key: \"60\",\r\n        text: \"60\",\r\n        value: 60\r\n      }\r\n    ];\r\n\r\n    const boolOptions = [\r\n      {\r\n        key: \"tak\",\r\n        text: \"Tak\",\r\n        value: \"true\"\r\n      },\r\n      {\r\n        key: \"nie\",\r\n        text: \"Nie\",\r\n        value: \"false\"\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <div className=\"SettingsPage\">\r\n        <Container>\r\n          <Row>\r\n            <Col className=\"ColumnBlack\">\r\n              <img src={logo} alt=\"logo\" />\r\n            </Col>\r\n          </Row>\r\n          <Row>Rundy:</Row>\r\n          <Row>\r\n            <Dropdown\r\n              placeholder=\"Wybierz ile rund\"\r\n              fluid\r\n              selection\r\n              options={roundOptions}\r\n              onChange={this.ustawRundy}\r\n              defaultValue={3}\r\n            />\r\n          </Row>\r\n          <Row>Minuty:</Row>\r\n          <Row>\r\n            <Dropdown\r\n              placeholder=\"Wybierz ile minut na rundę\"\r\n              fluid\r\n              selection\r\n              options={roundOptions}\r\n              onChange={this.ustawMinuty}\r\n              defaultValue={3}\r\n            />\r\n          </Row>\r\n          <Row>Sekundy:</Row>\r\n          <Row>\r\n            <Dropdown\r\n              placeholder=\"Wybierz ile sekund\"\r\n              fluid\r\n              selection\r\n              options={secondsOptions}\r\n              onChange={this.ustawSekundy}\r\n              defaultValue={0}\r\n            />\r\n          </Row>\r\n          <Row>Przerwa w sekundach:</Row>\r\n          <Row>\r\n            <Dropdown\r\n              placeholder=\"Wybierz przerwę\"\r\n              fluid\r\n              selection\r\n              options={cooldownOptions}\r\n              onChange={this.ustawPrzerwa}\r\n              defaultValue={60}\r\n            />\r\n          </Row>\r\n          <Row>Czas do startu:</Row>\r\n          <Row>\r\n            <Dropdown\r\n              placeholder=\"Wybierz czas przygotowania\"\r\n              fluid\r\n              selection\r\n              options={secondsOptions}\r\n              onChange={this.ustawCzasDoStartu}\r\n              defaultValue={10}\r\n            />\r\n          </Row>\r\n          <Row>Cooldown:</Row>\r\n          <Row>\r\n            <Dropdown\r\n              placeholder=\"Wybierz cooldown\"\r\n              fluid\r\n              selection\r\n              options={cooldownOptions}\r\n              onChange={this.ustawCooldown}\r\n              defaultValue={60}\r\n            />\r\n          </Row>\r\n\r\n          <Row>Sygnał co minutę:</Row>\r\n          <Row>\r\n            <Dropdown\r\n              placeholder=\"Wybierz\"\r\n              fluid\r\n              selection\r\n              options={boolOptions}\r\n              onChange={this.ustawSygnalCoMinute}\r\n              defaultValue={\"true\"}\r\n            />\r\n          </Row>\r\n          <Row>SoundPack:</Row>\r\n          <Row>\r\n            <Dropdown\r\n              placeholder=\"Wybierz trenera\"\r\n              fluid\r\n              selection\r\n              options={friendOptions}\r\n              onChange={this.ustawSoundPack}\r\n              defaultValue={1}\r\n            />\r\n          </Row>\r\n          <Row>\r\n            <ReactNoSleep>\r\n              {({ isOn, enable, disable }) => (\r\n                <Button onClick={isOn ? disable : enable} inverted>\r\n                  {isOn ? \"ON\" : \"OFF\"}\r\n                </Button>\r\n              )}\r\n            </ReactNoSleep>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst container = compose<Props, ComponentProps>(\r\n  connect<StateProps, DispatchProps, {}, SettingsState>(\r\n    (_state: SettingsState, _props: any) => {\r\n      return {\r\n        minuty: _state.minuty,\r\n        sekundy: _state.sekundy\r\n      };\r\n    },\r\n    {\r\n      ustawMinuty,\r\n      ustawSekundy,\r\n      ustawRundy,\r\n      ustawPrzerwa,\r\n      ustawCooldown,\r\n      ustawSygnalCoMinute,\r\n      ustawSoundPack,\r\n      ustawCzasDoStartu\r\n    }\r\n  )\r\n)(SettingsPage);\r\n\r\nexport default container;\r\n","import React from \"react\";\r\nimport \"../css/Clock.css\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  ustawisCountDown,\r\n  ustawisStarting,\r\n  ustawisCooldown,\r\n  ustawisPrzerwa\r\n} from \"../actions/settingsActions\";\r\nimport { SettingsState } from \"../reducers/settingsReducer\";\r\nimport { compose } from \"recompose\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { Button, Segment } from \"semantic-ui-react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\ninterface ComponentProps {}\r\n\r\ninterface LocalProps {\r\n  minutyL: number;\r\n  sekundyL: number;\r\n  timeIsGrabbed: boolean;\r\n  tick: number;\r\n  rundyL: number;\r\n  czasDoStartuL: number;\r\n  currentRound: number;\r\n}\r\n\r\ninterface StateProps {\r\n  minuty: number;\r\n  sekundy: number;\r\n  isCooldown: boolean;\r\n  isCountdown: boolean;\r\n  isStarting: boolean;\r\n  isPrzerwa: boolean;\r\n  rundy: number;\r\n  przerwa: number;\r\n  cooldown: number;\r\n  sygnalCoMinute: boolean;\r\n  soundPack: number;\r\n  czasDoStartu: number;\r\n}\r\n\r\ninterface DispatchProps {\r\n  ustawisCountDown: typeof ustawisCountDown;\r\n  ustawisStarting: typeof ustawisStarting;\r\n  ustawisCooldown: typeof ustawisCooldown;\r\n  ustawisPrzerwa: typeof ustawisPrzerwa;\r\n}\r\n\r\ntype Props = ComponentProps & LocalProps & StateProps & DispatchProps;\r\n\r\nexport class Clock extends React.Component<Props, LocalProps> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      minutyL: 3,\r\n      sekundyL: 10,\r\n      timeIsGrabbed: false,\r\n      tick: 0,\r\n      rundyL: 3,\r\n      currentRound: 1,\r\n      czasDoStartuL: 10\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { minuty, sekundy, isCountdown, rundy, czasDoStartu } = this.props;\r\n    const { minutyL, sekundyL, czasDoStartuL } = this.state;\r\n    if (!isCountdown) {\r\n      if (\r\n        minutyL != minuty ||\r\n        sekundyL != sekundy ||\r\n        czasDoStartuL != czasDoStartu\r\n      ) {\r\n        this.setState({\r\n          minutyL: minuty,\r\n          sekundyL: sekundy,\r\n          tick: czasDoStartu,\r\n          rundyL: rundy,\r\n          czasDoStartuL: czasDoStartu\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const {\r\n      minuty,\r\n      sekundy,\r\n      isCountdown,\r\n      isStarting,\r\n      czasDoStartu\r\n    } = this.props;\r\n    const { minutyL, sekundyL, tick, czasDoStartuL } = this.state;\r\n\r\n    var x = this;\r\n\r\n    if (!isCountdown && !isStarting) {\r\n      if (\r\n        minutyL != minuty ||\r\n        sekundyL != sekundy ||\r\n        czasDoStartuL != czasDoStartu\r\n      ) {\r\n        this.setState({\r\n          minutyL: minuty,\r\n          sekundyL: sekundy,\r\n          tick: czasDoStartu,\r\n          czasDoStartuL: czasDoStartu\r\n        });\r\n      }\r\n    } else if (isStarting && !isCountdown) {\r\n      if (tick == 0) {\r\n        this.stopStarting();\r\n        this.startCountdown();\r\n        this.setState({          \r\n          tick: minuty * 60 + sekundy\r\n        });\r\n      }\r\n      setTimeout(function() {\r\n        if (tick > 0) {\r\n          x.setState({\r\n            tick: tick - 1\r\n          });\r\n        }\r\n      }, 1000);\r\n    } else if (isCountdown && !isStarting) {\r\n      // if (tick == 0) {\r\n      //   let path = \"../src/sound/airhorn.mp3\";\r\n      //   const audio = new Audio(path);\r\n      //   audio.play();\r\n      // }\r\n      setTimeout(function() {\r\n        if (tick > 0) {\r\n          x.setState({\r\n            tick: tick - 1\r\n          });\r\n        }\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  public formatTime = (time: number) => {\r\n    let seconds = time % 60;\r\n    let minutes = Math.floor(time / 60);\r\n    const minutesString =\r\n      minutes.toString().length === 1 ? \"0\" + minutes : minutes;\r\n    const secondsString =\r\n      seconds.toString().length === 1 ? \"0\" + seconds : seconds;\r\n    return minutesString + \":\" + secondsString;\r\n  };\r\n\r\n  public startCountdown = () => {\r\n    const { ustawisCountDown, minuty, sekundy } = this.props;\r\n    //this.startStarting();\r\n    // this.setState({\r\n    //   tick: minuty * 60 + sekundy\r\n    // });\r\n    if (ustawisCountDown) {\r\n      ustawisCountDown(true);\r\n    }\r\n  };\r\n\r\n  public stopCountdown = () => {\r\n    const { ustawisCountDown } = this.props;\r\n    if (ustawisCountDown) {\r\n      ustawisCountDown(false);\r\n    }\r\n  };\r\n\r\n  public resetCountdown = () => {\r\n    const { minuty, sekundy, czasDoStartu } = this.props;\r\n    const { tick } = this.state;\r\n    this.setState({\r\n      tick: czasDoStartu\r\n    });\r\n  };\r\n\r\n  public startStarting = () => {\r\n    const { ustawisStarting, czasDoStartu } = this.props;\r\n    const { tick } = this.state;\r\n\r\n    if (tick == 0) {\r\n      this.stopStarting();\r\n    }\r\n\r\n    if (ustawisStarting) {\r\n      ustawisStarting(true);\r\n    }\r\n  };\r\n\r\n  public stopStarting = () => {\r\n    const { ustawisStarting } = this.props;\r\n    if (ustawisStarting) {\r\n      ustawisStarting(false);\r\n    }\r\n  };\r\n\r\n  public resetStarting = () => {\r\n    const { czasDoStartu } = this.props;\r\n    this.setState({\r\n      tick: czasDoStartu\r\n    });\r\n  };\r\n\r\n  public getColor = () => {\r\n    const { minuty, sekundy, isCountdown, isStarting } = this.props;\r\n    const { tick } = this.state;\r\n    const czas = minuty * 60 + sekundy;\r\n    const procent = tick / czas;\r\n    const green = 255 * procent;\r\n    const red = 255 - green;\r\n\r\n    if (isCountdown) {\r\n      return (\r\n        \"rgb(\" +\r\n        parseInt(red.toString(), 10) +\r\n        \",\" +\r\n        parseInt(green.toString(), 10) +\r\n        \",30)\"\r\n      );\r\n    }\r\n    if (isStarting) {\r\n      return \"rgb(0,100,255)\";\r\n    }\r\n    return \"rgb(0,100,255)\";\r\n  };\r\n\r\n  public startButton = () => {\r\n    const { ustawisStarting, isCountdown, isStarting } = this.props;\r\n    const { tick } = this.state;\r\n\r\n    \r\n\r\n    if (!isStarting) {\r\n      if (ustawisStarting) {\r\n        ustawisStarting(true);\r\n      }\r\n    }\r\n    // else{\r\n    //   if (tick == 0) {\r\n    //     this.stopStarting();\r\n    //   }\r\n    // }\r\n\r\n    if (isCountdown) {\r\n      if (ustawisCountDown) {\r\n        ustawisCountDown(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { isCountdown, rundy } = this.props;\r\n    const { tick, rundyL, currentRound } = this.state;\r\n    let style = {\r\n      color: this.getColor()\r\n    };\r\n\r\n    return (\r\n      <Container>\r\n        <div className=\"ClockNumbers\" style={style}>\r\n          {this.formatTime(tick)}\r\n        </div>\r\n        <Row>\r\n          <Col className=\"ClockColumnCentered\">\r\n            <Button onClick={this.startButton} inverted>\r\n              {isCountdown ? \"Stop\" : \"Start\"}\r\n            </Button>\r\n          </Col>\r\n          <Col className=\"ClockColumnCentered ClockRounds\" style={style}>\r\n            Runda {currentRound}/{rundy}\r\n          </Col>\r\n          <Col className=\"ClockColumnCentered\">\r\n            <Button\r\n              onClick={this.resetCountdown}\r\n              // disabled={isCountdown}\r\n              inverted\r\n            >\r\n              Reset\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nconst container = compose<Props, ComponentProps>(\r\n  connect<StateProps, DispatchProps, {}, SettingsState>(\r\n    (_state: SettingsState, _props: any) => {\r\n      return {\r\n        minuty: _state.minuty,\r\n        sekundy: _state.sekundy,\r\n        isCooldown: _state.isCooldown,\r\n        isCountdown: _state.isCountdown,\r\n        isStarting: _state.isStarting,\r\n        isPrzerwa: _state.isPrzerwa,\r\n        rundy: _state.rundy,\r\n        przerwa: _state.przerwa,\r\n        cooldown: _state.cooldown,\r\n        sygnalCoMinute: _state.sygnalCoMinute,\r\n        soundPack: _state.soundPack,\r\n        czasDoStartu: _state.czasDoStartu\r\n      };\r\n    },\r\n    {\r\n      ustawisCountDown,\r\n      ustawisStarting,\r\n      ustawisCooldown,\r\n      ustawisPrzerwa\r\n    }\r\n  )\r\n)(Clock);\r\n\r\nexport default container;\r\n","import React from \"react\";\r\nimport \"../css/Clock.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { SettingsState } from \"../reducers/settingsReducer\";\r\nimport { compose } from \"recompose\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\ninterface ComponentProps {}\r\n\r\ninterface LocalProps {}\r\n\r\ninterface StateProps {\r\n  minuty: number;\r\n  sekundy: number;\r\n  rundy: number;\r\n  przerwa: number;\r\n  cooldown: number;\r\n  sygnalCoMinute: boolean;\r\n  czasDoStartu: number;\r\n}\r\n\r\ninterface DispatchProps {}\r\n\r\ntype Props = ComponentProps & LocalProps & StateProps & DispatchProps;\r\n\r\nexport class Summary extends React.Component<Props, LocalProps> {\r\n  render() {\r\n    const {\r\n      minuty,\r\n      sekundy,\r\n      rundy,\r\n      przerwa,\r\n      cooldown,\r\n      sygnalCoMinute,\r\n      czasDoStartu\r\n    } = this.props;\r\n\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col className=\"ClockColumnCentered\">\r\n            <p>\r\n              Rundy:{rundy} | Czas:{minuty}:{sekundy < 10 ? `0${sekundy}` : sekundy} | Przerwa: {przerwa}s |\r\n              Cooldown: {cooldown}s\r\n            </p>\r\n          </Col>\r\n          <Col>\r\n            <p>\r\n              Sygnał co minutę: {sygnalCoMinute ? \"Tak\" : \"Nie\"} | Czas do\r\n              startu: {czasDoStartu}s\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nconst container = compose<Props, ComponentProps>(\r\n  connect<StateProps, DispatchProps, {}, SettingsState>(\r\n    (_state: SettingsState, _props: any) => {\r\n      return {\r\n        minuty: _state.minuty,\r\n        sekundy: _state.sekundy,\r\n        rundy: _state.rundy,\r\n        przerwa: _state.przerwa,\r\n        cooldown: _state.cooldown,\r\n        sygnalCoMinute: _state.sygnalCoMinute,\r\n        czasDoStartu: _state.czasDoStartu\r\n      };\r\n    },\r\n    {}\r\n  )\r\n)(Summary);\r\n\r\nexport default container;\r\n","import React from \"react\";\r\nimport Sidebar from \"react-sidebar\";\r\nimport \"../css/HomePage.css\";\r\nimport airhornFile from \"../sound/airhorn.mp3\";\r\nimport settingsIcon from \"../img/setting-512.png\";\r\nimport SettingsPage from \"../containers/SettingsPage\";\r\nimport Clock from \"../containers/Clock\";\r\nimport Summary from \"../containers/Summary\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nclass HomePage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      sidebarOpen: false\r\n    };\r\n    this.onSetSidebarOpen = this.onSetSidebarOpen.bind(this);\r\n  }\r\n\r\n  onSetSidebarOpen(open) {\r\n    this.setState({ sidebarOpen: open });\r\n  }\r\n\r\n  render() {\r\n    const audio = new Audio(airhornFile);\r\n    return (\r\n      <div className=\"HomePage\">\r\n        <Sidebar\r\n          sidebar={<SettingsPage></SettingsPage>}\r\n          open={this.state.sidebarOpen}\r\n          onSetOpen={this.onSetSidebarOpen}\r\n          styles={{ sidebar: { background: \"black\" } }}\r\n        >\r\n          <img\r\n            src={settingsIcon}\r\n            alt=\"SettingsIcon\"\r\n            onClick={() => this.onSetSidebarOpen(true)}\r\n            style={{ width: \"40px\", height: \"40px\" }}\r\n          />\r\n\r\n          <header className=\"App-header\">\r\n            <Container>\r\n              <Row>\r\n                <Summary></Summary>\r\n              </Row>\r\n              <Row>\r\n                <Clock></Clock>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Col className=\"App-footer\">\r\n                  <p className=\"G-logo\" onClick={() => audio.play()}>\r\n                    Powered by <b>Goliat</b>\r\n                  </p>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </header>\r\n        </Sidebar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\nimport HomePage from \"../src/containers/HomePage\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <HomePage></HomePage>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { Action } from \"../models\";\r\n\r\nimport * as actionTypes from \"../actions/actionTypes\";\r\n\r\nexport interface SettingsState {\r\n  minuty: number;\r\n  sekundy: number;\r\n  rundy: number;\r\n  przerwa: number;\r\n  cooldown: number;\r\n  sygnalCoMinute: boolean;\r\n  soundPack: number;\r\n  clockColorRed: number;\r\n  clockColorBlue: number;\r\n  clockColorGreen: number;\r\n  isCountdown: boolean;\r\n  isCooldown: boolean;\r\n  isStarting: boolean;\r\n  isPrzerwa: boolean;\r\n  czasDoStartu: number;\r\n}\r\n\r\nexport const initialState: SettingsState = {\r\n  minuty: 3,\r\n  sekundy: 0,\r\n  rundy: 3,\r\n  przerwa: 60,\r\n  cooldown: 60,\r\n  sygnalCoMinute: true,\r\n  soundPack: 1,\r\n  clockColorRed: 255,\r\n  clockColorBlue: 255,\r\n  clockColorGreen: 255,\r\n  isCountdown: false,\r\n  isCooldown: false,\r\n  isStarting: false,\r\n  isPrzerwa: false,\r\n  czasDoStartu: 10\r\n};\r\n\r\nexport default function reducer(\r\n  state: SettingsState = initialState,\r\n  action: Action\r\n): SettingsState {\r\n  switch (action.type) {\r\n    case actionTypes.SETTINGS_USTAW_RUNDY:\r\n      return {\r\n        ...state,\r\n        rundy: action.payload\r\n      };\r\n    case actionTypes.SETTINGS_USTAW_MINUTY:\r\n      return {\r\n        ...state,\r\n        minuty: action.payload\r\n      };\r\n    case actionTypes.SETTINGS_USTAW_SEKUNDY:\r\n      return {\r\n        ...state,\r\n        sekundy: action.payload\r\n      };\r\n\r\n    case actionTypes.SETTINGS_USTAW_PRZERWA:\r\n      return {\r\n        ...state,\r\n        przerwa: action.payload\r\n      };\r\n\r\n    case actionTypes.SETTINGS_USTAW_COLDOWN:\r\n      return {\r\n        ...state,\r\n        cooldown: action.payload\r\n      };\r\n\r\n    case actionTypes.SETTINGS_USTAW_SYGNALCOMINUTE:\r\n      return {\r\n        ...state,\r\n        sygnalCoMinute: action.payload\r\n      };\r\n\r\n    case actionTypes.SETTINGS_USTAW_SOUNDPACK:\r\n      return {\r\n        ...state,\r\n        soundPack: action.payload\r\n      };\r\n\r\n    case actionTypes.SETTINGS_USTAW_CLOCKRED:\r\n      return {\r\n        ...state,\r\n        clockColorRed: action.payload\r\n      };\r\n\r\n    case actionTypes.SETTINGS_USTAW_CLOCKGREEN:\r\n      return {\r\n        ...state,\r\n        clockColorGreen: action.payload\r\n      };\r\n\r\n    case actionTypes.SETTINGS_USTAW_CLOCKBLUE:\r\n      return {\r\n        ...state,\r\n        clockColorBlue: action.payload\r\n      };\r\n\r\n    case actionTypes.SETTINGS_USTAW_ISCOUNTDOWN:\r\n      return {\r\n        ...state,\r\n        isCountdown: action.payload\r\n      };\r\n\r\n    case actionTypes.SETTINGS_USTAW_ISCOOLDOWN:\r\n      return {\r\n        ...state,\r\n        isCooldown: action.payload\r\n      };\r\n\r\n    case actionTypes.SETTINGS_USTAW_ISSTARTING:\r\n      return {\r\n        ...state,\r\n        isStarting: action.payload\r\n      };\r\n\r\n    case actionTypes.SETTINGS_USTAW_ISPRZERWA:\r\n      return {\r\n        ...state,\r\n        isPrzerwa: action.payload\r\n      };\r\n\r\n    case actionTypes.SETTINGS_USTAW_CZASDOSTARTU:\r\n      return {\r\n        ...state,\r\n        czasDoStartu: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore } from \"redux\";\r\nimport settingsReducer from \"../src/reducers/settingsReducer\";\r\n\r\nexport const store = createStore(settingsReducer);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { Provider } from \"react-redux\";\r\nimport {store} from \"../src/store\";\r\n// import 'semantic-ui-css/semantic.min.css'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}